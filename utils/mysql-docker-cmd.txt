- provision server
- add CNAME for subdomain - proddb.exmaple.com
- open firewall for port 3306
- install docker
- start docker service
- start database

#ON THE DATABASE SERVER *********************************

#Command to start MySQL Docker Container

sudo docker run -d --name prod_mysql \
-p 3306:3306 \
-v /var/lib/mysql:/var/lib/mysql \
-e MYSQL_ROOT_PASSWORD=tiger  \
mysql/mysql-server:latest

#check running images
sudo docker ps

#Connect to container
sudo docker exec -it prod_mysql bash

# Connect mySql
mysql -p

#create database
CREATE DATABASE springguru

grant all privileges on springguru.* to 'spring_guru_owner'@'localhost' identified by "GuruPassword";

#ON THE APPLICATION SERVER *********************************************

#Bash env
export SPRING_DATASOURCE_URL=jdbc:mysql://52.53.246.241:3306/springguru

export SPRING_DATASOURCE_USERNAME=spring_guru_owner
export SPRING_DATASOURCE_USERNAME="ENC(ACW0rXGyHPxI0+p4h3DStdmQMFUCWhMF5+9DjJStuKc=)"

export SPRING_DATASOURCE_PASSWORD="GuruPassword"
export SPRING_DATASOURCE_PASSWORD="ENC(Ij3OP/MWsKdy6gLKfoIIdntSkfOLzb32)"

export JASYPT_ENCRYPTOR_PASSWORD=password

#User update
DROP USER 'spring_guru_owner'@'localhost';
grant all privileges on springguru.* to 'spring_guru_owner'@'%' identified by "GuruPassword";
FLUSH PRIVILEGES;

#run command
java -jar ./spring-core-devops-0.0.1.jar --spring.jpa.hibernate.ddl-auto=update

springguru.cqcjtbo0mv1x.us-west-1.rds.amazonaws.com:3306